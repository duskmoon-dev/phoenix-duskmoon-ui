<.dm_breadcrumb class="px-4">
    <:crumb>Icon</:crumb>
    <:crumb>Material Design Icon</:crumb>
</.dm_breadcrumb>
<.dm_card class={[
    "w-full h-full overflow-auto",
]}>
  <:title class="flex flex-row justify-center items-center">
    <span class="text-4xl text-blue-600 hover:text-blue-400">
      Material Design Icons
    </span>
    <span class="ml-4 text-sm text-base-content/60">
      <%= length(@mdi_icons) %> of <%= PhoenixDuskmoon.Component.Icons.mdi_icons() |> length() %> icons
    </span>
  </:title>
  <div class="mockup-window bg-base-300 border">
    <.dm_markdown
        class="mx-6"
        content={"""
        ## Example

        ```html
        <!-- icon_name is material icon name -->
        <.dm_mdi name={icon_name} class="w-12 h-12" />
        ```
        """}
    />
  </div>
  <div class="flex flex-row mt-4 mb-2 gap-2">
    <.dm_form for={@conn} action={~p"/mdi"} method="get" class="input input-bordered pr-0 flex-1">
      <.dm_input field_class="flex" label="Icon Name" name="filter" value={@filter} classic={true} />
      <button type="submit" class="btn btn-primary">Search</button>
    </.dm_form>
    <button
      id="toggle-view"
      class="btn btn-ghost"
      onclick="toggleIconView()"
    >
      <.dm_bsi name="grid" class="w-4 aspect-square" />
    </button>
  </div>

  <div id="icon-container" class="grid grid-cols-auto-fill-[8rem] gap-3 max-h-[70vh] overflow-y-auto p-2">
    <div
      :for={icon_name <- @mdi_icons}
      class="border border-base-300 hover:border-primary rounded-lg flex flex-col items-center justify-center p-3 transition-all hover:shadow-md cursor-pointer group"
      onclick={"copyIconName('#{icon_name}', this)"}
    >
      <div class="text-primary/60 text-xs font-mono mb-2 text-center break-all">
        <%= icon_name %>
      </div>
      <div class="flex items-center justify-center mb-2">
        <.dm_mdi name={icon_name} class="w-12 h-12 text-base-content group-hover:text-primary transition-colors" />
      </div>
      <button
        class="btn btn-xs btn-ghost opacity-0 group-hover:opacity-100 transition-opacity"
        onclick={"event.stopPropagation(); copyIconName('#{icon_name}', this.parentElement)"}
      >
        <.dm_bsi name="clipboard" class="w-3 aspect-square" />
      </button>
    </div>
  </div>

  <div id="loading-indicator" class="hidden fixed inset-0 bg-base-100/80 flex items-center justify-center z-50">
    <div class="loading loading-spinner loading-lg"></div>
  </div>
</.dm_card>

<script>
  let currentView = 'grid';
  let searchTimeout;

  function toggleIconView() {
    const container = document.getElementById('icon-container');
    const toggleBtn = document.getElementById('toggle-view');

    if (currentView === 'grid') {
      container.className = 'flex flex-wrap gap-2 max-h-[70vh] overflow-y-auto p-2 *:w-32 *:flex-1';
      currentView = 'list';
    } else {
      container.className = 'grid grid-cols-auto-fill-[8rem] gap-3 max-h-[70vh] overflow-y-auto p-2';
      currentView = 'grid';
    }
  }

  function copyIconName(iconName, element) {
    copyTextToClipboard(iconName);
    showCopyFeedback(element);

    // Add visual feedback
    element.classList.add('ring-2', 'ring-success', 'ring-opacity-50');
    setTimeout(() => {
      element.classList.remove('ring-2', 'ring-success', 'ring-opacity-50');
    }, 1000);
  }

  // Debounced search functionality
  function setupDebouncedSearch() {
    const searchInput = document.querySelector('input[name="filter"]');
    if (searchInput) {
      searchInput.addEventListener('input', function(e) {
        clearTimeout(searchTimeout);
        const loadingIndicator = document.getElementById('loading-indicator');

        searchTimeout = setTimeout(() => {
          loadingIndicator.classList.remove('hidden');
          const form = e.target.closest('form');
          form.submit();
        }, 300);
      });
    }
  }

  // Initialize when DOM is ready
  document.addEventListener('DOMContentLoaded', setupDebouncedSearch);
</script>
