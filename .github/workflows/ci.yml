name: Tests

on:
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: Run tests (Elixir ${{matrix.elixir}}, OTP ${{matrix.otp}})

    strategy:
      matrix:
        include:
          - elixir: 1.18
            otp: 28
          - elixir: 1.18
            otp: 27

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Set up Elixir
      uses: erlef/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore deps and _build cache
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}

    - name: Install dependencies
      run: mix deps.get --only test
      env:
        MIX_ENV: test

    - name: Check source code format
      run: mix format --check-formatted
      env:
        MIX_ENV: test

    - name: Remove compiled application files
      run: mix clean

    - name: Compile & lint dependencies
      run: |
        # Try to compile with warnings as errors, but allow known PhoenixStorybook warning
        if ! mix compile --warnings-as-errors; then
          echo "Compilation with warnings-as-errors failed, checking for known PhoenixStorybook warning..."
          if mix compile 2>&1 | grep -q "this clause cannot match because a previous clause at line.*always matches"; then
            echo "Only known PhoenixStorybook warning detected, continuing..."
          else
            echo "Other compilation warnings found, failing build."
            mix compile
            exit 1
          fi
        fi
      env:
        MIX_ENV: test

    - name: Run tests
      run: mix test
      env:
        MIX_ENV: test
